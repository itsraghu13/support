import os
import multiprocessing
import gzip
import difflib

folder_path = r"C:\path\to\your\folder"

def compare_files(file_paths):
    matching_lines = []

    if len(file_paths) != 2:
        return matching_lines

    try:
        with gzip.open(file_paths[0], "rt") as file1, gzip.open(file_paths[1], "rt") as file2:
            lines1 = file1.readlines()
            lines2 = file2.readlines()

        # Use difflib to compare the lines
        d = difflib.Differ()
        diff = list(d.compare(lines1, lines2))

        # Filter lines that are identical or only present in both files
        matching_lines = [line.strip() for line in diff if line.startswith("  ")]

    except Exception as e:
        print(f"Error processing files {file_paths}: {str(e)}")

    return matching_lines

def main():
    matching_lines = []

    # Get the number of cores
    num_cores = multiprocessing.cpu_count()

    # Create a multiprocessing pool
    with multiprocessing.Pool(num_cores) as pool:
        # Get the list of gzipped files
        gzipped_files = [file_name for file_name in os.listdir(folder_path) if file_name.endswith(".gz")]

        # Generate pairs of file paths for comparison
        file_pairs = [(gzipped_files[i], gzipped_files[j]) for i in range(len(gzipped_files)) for j in range(i + 1, len(gzipped_files))]

        # Use the pool to compare the file pairs
        results = pool.map(compare_files, file_pairs)

        for result in results:
            matching_lines.extend(result)

    if matching_lines:
        print("Matching lines found:")
        for line in matching_lines:
            print(line)
    else:
        print("No matching lines found between the gzipped files.")

if __name__ == "__main__":
    main()
