 insert_query = f"""
            INSERT INTO target_table (config_id, process_id, new_process_id)
            VALUES ({config_id}, '{process_id}', '{new_process_id}')
        """
        spark.sql(insert_query)









result = spark.sql(query).collect()

    if len(result) > 0:
        # Extract values from the result
        config_id = result[0][0]
        process_id = result[0][1]
        new_process_id = result[0][2]
        print("New Process ID:", new_process_id)

        # Update the row in the target_table
        update_query = f"""
            UPDATE target_table
            SET new_process_id = '{new_process_id}'
            WHERE config_id = {config_id} AND process_id = '{process_id}'
        """
        spark.sql(update_query)







SELECT
    config.config_id,
    'ID' || CAST(
        COALESCE(MAX(CAST(REGEXP_REPLACE(process_id, 'ID', '') AS INT)), 0) + 1 AS STRING
    ) AS new_id,
    LAG(process_id) OVER (PARTITION BY config.config_id ORDER BY prev_delta_end_time) AS prev_process_id,
    prev_delta_end_time AS prev_begin_time,
    CASE
        WHEN MAX(CASE WHEN dataload.status = 'running' THEN 1 ELSE 0 END) = 1 THEN 'duplicate run'
        ELSE 'running'
    END AS status
FROM structured.t_database_config config
LEFT JOIN (
    SELECT
        config_id,
        MAX(delta_end_time) AS prev_delta_end_time
    FROM structured.t_dataload
    GROUP BY config_id
) dataload_max ON config.config_id = dataload_max.config_id
LEFT JOIN structured.t_dataload dataload ON config.config_id = dataload.config_id
WHERE config.do_Name = 'int1'
    AND config.author = 'Raghav'
    AND config.db_Type = 'sql server'
GROUP BY
    config.config_id, prev_delta_end_time;





















SELECT
    config.config_id,
    'ID' || CAST(
        COALESCE(MAX(CAST(REGEXP_REPLACE(process_id, 'ID', '') AS INT)), 0) + 1 AS STRING
    ) AS new_id,
    CASE
        WHEN MAX(CASE WHEN dataload.status = 'running' THEN 1 ELSE 0 END) = 1 THEN 'duplicate run'
        ELSE 'running'
    END AS status
FROM structured.t_database_config config
LEFT JOIN structured.t_dataload dataload ON config.config_id = dataload.config_id
WHERE config.do_Name = 'int1'
    AND config.author = 'Raghav'
    AND config.db_Type = 'sql server'
GROUP BY
    config.config_id;



SELECT
    config.config_id,
    'ID' || CAST(
        COALESCE(MAX(CAST(REGEXP_REPLACE(process_id, 'ID', '') AS INT)), 0) + 1 AS STRING
    ) AS new_id,
    CASE
        WHEN MAX(CASE WHEN dataload.status = 'running' THEN 1 ELSE 0 END) = 1 THEN 'duplicate run'
        ELSE 'running'
    END AS status,
    MAX(process_id) AS max_process_id,
    LEAD(process_id) OVER (ORDER BY MAX(CAST(REGEXP_REPLACE(process_id, 'ID', '') AS INT))) AS next_process_id,
    MAX(delta_start) AS max_delta_start,
    LEAD(delta_start) OVER (ORDER BY MAX(CAST(REGEXP_REPLACE(process_id, 'ID', '') AS INT))) AS next_delta_start,
    MAX(delta_end) AS max_delta_end,
    LEAD(delta_end) OVER (ORDER BY MAX(CAST(REGEXP_REPLACE(process_id, 'ID', '') AS INT))) AS next_delta_end
FROM structured.t_database_config config
LEFT JOIN structured.t_dataload dataload ON config.config_id = dataload.config_id
WHERE config.do_Name = 'int1'
    AND config.author = 'Raghav'
    AND config.db_Type = 'sql server'
GROUP BY
    config.config_id;






















SELECT
    td.config_id,
    CONCAT('ID', config_id, 'R', MAX(CAST(REPLACE(process_id, CONCAT('ID', config_id, 'R'), '') AS INT)) + 1) AS process_id,
    CASE
        WHEN existing.config_id IS NOT NULL THEN 'duplicate'
        ELSE 'running'
    END AS table_status_run
FROM
    structured.t_dataload_poc td
LEFT JOIN
    (
        SELECT
            config_id
        FROM
            structured.t_dataload_poc
        WHERE
            table_status_run = 'running'
    ) existing ON td.config_id = existing.config_id
WHERE
    td.config_id IN (
        SELECT
            config_id
        FROM
            structured.t_database_config
        WHERE
            db_Type = 'sql server'
            AND config_id = 56
    )
GROUP BY
    config_id, table_run_status;










-- Insert records into t_dataload with process_id and status 'running'
INSERT INTO structured.t_dataload (config_id, process_id, status)
SELECT
    config_id,
    COALESCE(MAX(CAST(REPLACE(process_id, 'ID', '') AS INT)), 0) + 1 AS new_process_id,
    'running' AS status
FROM
    structured.t_dataload
WHERE
    config_id IN (
        SELECT config_id
        FROM structured.t_database_config
        WHERE
            do_Name = 'int1'
            AND author = 'Raghav'
            AND db_Type = 'sql server'
            AND status = 'success'
    )
GROUP BY
    config_id;

-- Retrieve information related to database configurations
SELECT
    config.config_id,
    CONCAT('select * from ', schema_name, ' ', REPLACE(config.table_name, 'dbo_', '')) AS query,
    DATE_FORMAT(delta_end_time, 'yyyy/MM/dd HH:mm:ss') AS begin_time,
    DATE_FORMAT(currenc_camescamp, 'yyyy/MM/dd HH:mm:ss') AS end_time,
    config.table_name,
    config.load_type,
    config.schema_name,
    config.do_name,
    config.source_name,
    config.db_Type,
    config.frequency,
    config.secret_name,
    config.watermark_Columns,
    config.custom_refresh,
    dataload.process_id
FROM
    structured.t_database_config config
LEFT JOIN (
    SELECT
        t_dataload.*,
        MAX(CAST(REPLACE(process_id, 'ID', '') AS INT)) AS process_id
    FROM
        structured.t_dataload
    WHERE
        config_id IN (
            SELECT config_id
            FROM structured.t_database_config
            WHERE
                do_Name = 'int1'
                AND author = 'Raghav'
                AND db_Type = 'sql server'
                AND status = 'success'
        )
    GROUP BY
        config_id
) dataload ON config.config_id = dataload.config_id;






















UPDATE structured.t_dataload
SET
    process_id = (
        SELECT
            CONCAT('ID', config_id, 'R', MAX(CAST(REPLACE(process_id, 'R', '') AS INT)) + 1) AS process_id
        FROM structured.t_dataload
        WHERE config_id = t_dataload.config_id
        GROUP BY config_id
    ),
    status = 'running'
WHERE do_name = 'int1'
AND author = 'Raghav'
AND db_type = 'sql server'
AND status = 'success';

SELECT
    config.config_id,
    CONCAT('select * from ', schema_name, ' ', REPLACE(config.table_name, 'dbo_', '')) AS query,
    DATE_FORMAT(delta_end_time, '%Y/%m/%d %H:%i:%s') AS begin_time,
    DATE_FORMAT(curr_camp, '%Y/%m/%d %H:%i:%s') AS end_time,
    config.table_name,
    config.load_type,
    config.schema_name,
    config.do_name,
    contig.source_name,
    config.db_type,
    config.frequency,
    config.secret_name,
    config.watermark_columns,
    config.custom_refresh,
    process_id
FROM structured.t_database_config config
LEFT JOIN (
    SELECT
        t_dataload.*
    FROM structured.t_dataload t_dataload
    JOIN (
        SELECT
            config_id,
            MAX(CAST(REPLACE(process_id, 'R', '') AS INT)) AS process_id
        FROM structured.t_dataload
        GROUP BY config_id
    ) max_processid
    ON t_dataload.config_id = max_processid.config_id
    AND CONCAT('ID', max_processid.config_id, 'R', max_processid.process_id) = t_dataload.process_id
) dataload
ON config.config_id = dataload.config_id
WHERE
    do_name = 'int1'
    AND author = 'Raghav'












SELECT
    config_id,
    COALESCE(MAX(CAST(REPLACE(process_id, 'ID', '') AS INT)), 0) + 1 AS new_process_id,
    'running' AS status
FROM
    structured.t_dataload
WHERE
    config_id IN (
        SELECT config_id
        FROM structured.t_database_config
        WHERE
            do_Name = 'int1'
            AND author = 'Raghav'
            AND db_Type = 'sql server'
            AND status = 'success'
    )
GROUP BY
    config_id;

-- Raise an exception if the status is already 'running'
SELECT
    config_id,
    status
FROM structured.t_dataload
WHERE config_id IN (
    SELECT config_id
    FROM structured.t_dataload
    WHERE status = 'running'
);

-- Update the status to 're-attempted' if the update succeeds
UPDATE structured.t_dataload
SET status = 're-attempted'
WHERE config_id IN (
    SELECT config_id
    FROM structured.t_dataload
    WHERE status = 'running'
);

    AND db_type = 'sql server'
    AND status = 'success';

